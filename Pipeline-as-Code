pipeline {
    agent any

    environment {
        PROJECT_ID = 'deeplearning-422418'
        CLUSTER_NAME = 'cluster-1'
        ZONE = 'us-central1'
        DOCKER_IMAGE_NAME = 'yassinegaaloul/flask-v4'
    }

    stages {
        stage('Checkout repository') {
            steps {
                git branch: 'main', url: 'https://github.com/Yassine-gaaloul/expo'
            }
        }

        stage('Login to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh 'docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD'
                }
            }
        }

        stage('Build Docker image') {
            steps {
                sh "docker build -t $DOCKER_IMAGE_NAME ."
            }
        }

        stage('Tag Docker image') {
            steps {
                sh "docker tag $DOCKER_IMAGE_NAME $DOCKER_IMAGE_NAME:latest"
            }
        }

        stage('Push Docker image to Docker Hub') {
            steps {
                sh "docker push $DOCKER_IMAGE_NAME"
            }
        }
         stage('Deploy to Production') {
            steps {
                
                sh 'kubectl apply -f expensse-tracker/docker-compose.yaml'
            }
        }

        stage('Update Kubernetes deployment') {
            steps {
                sh '''
                    gcloud container clusters get-credentials $CLUSTER_NAME --zone $ZONE --project $PROJECT_ID
                    kubectl apply -f kubernetes/
                    kubectl set image deployment/deep deep=$DOCKER_IMAGE_NAME:latest
                '''
            }
        }
    }

    post {
        success {
            // Remove Docker image from Jenkins workspace
            sh "docker rmi $DOCKER_IMAGE_NAME:latest"
        }
    }
}
